% mmBurgersExample: moving patches of Burgers PDE
%!TEX root = doc.tex
%{
\section{\texttt{mmBurgersExample}: example of moving
patches for Burgers' PDE}
\label{sec:mmBurgersExample}



The code here shows one way to get started: a user's script
may have the following three steps (left-right arrows denote
function recursion).
\begin{enumerate}\def\itemsep{-1ex}
\item configPatches1 
\item ode15s integrator \into\ mmPatchSmooth1 \into\ user's PDE
\item process results
\end{enumerate}
The simulation seems perfectly happy for the patches move so
that they overlap in the shock! and then separate again as
the shock decays.

Establish global patch data struct to point to and interface
with a function coding Burgers' \pde: to be solved on
$1$-periodic domain, with fifteen patches, spectral
interpolation couples the patches, each patch of half-size
ratio~$0.2$, and with five microscale points forming each
patch.
\begin{matlab}
%}
global patches
patches = configPatches1(@mmBurgersPDE,[0 1], nan, 15, 0, 0.2, 5 ...
    ,'EdgyInt',true);
patches.mmtime=0.1;
patches.Xlim=[0 1];
%{
\end{matlab}
Set usual sinusoidal initial condition.  Add some microscale
randomness that decays within time of~\(0.01\), but also
seeds slight macroscale variations.
\begin{matlab}
%}
u0 = sin(2*pi*patches.x)+0.05*randn(size(patches.x));
N = size(patches.x,4)
D0 = zeros(N,1);
%{
\end{matlab}
Simulate in time using a standard stiff integrator and the
interface function \verb|mmPatchsmooth1()|
(\cref{sec:mmPatchSmooth1}).
\begin{matlab}
%}
tic
[ts,us] = ode15s( @mmPatchSmooth1,linspace(0,0.8),[D0;u0(:)]);
cpuTime=toc
%{
\end{matlab}


\paragraph{Plots}
Choose whether to save some plots, or not.
\begin{matlab}
%}
global OurCf2eps
OurCf2eps=false;
%{
\end{matlab}

Plot the movement of the mesh, the centre of each patch, as
a function of time: spatial domain horizontal, and time
vertical.
\begin{matlab}
%}
figure(1),clf
Ds=us(:,1:N);
Xs=shiftdim(mean(patches.x),2);
plot(Xs+Ds,ts), ylabel('time t'),xlabel('space x')
title('Burgers PDE: patch locations over time')
%{
\end{matlab}

Animate the simulation using only the microscale values
interior to the patches: set $x$-edges to \verb|nan| to
leave the gaps.  \cref{fig:mmBurgersExample} illustrates an
example simulation in time generated by the patch scheme
applied to Burgers'~\pde.
\begin{matlab}
%}
us=us(:,N+1:end).';
us(abs(us)>2)=nan;
patches.x([1 end],:,:,:)=nan;  
%% section break to ease rerun of animation 
figure(2),clf
for i=1:nTime
  xs=squeeze(patches.x)+Ds(i,:);
  if i==1,  hpts=plot(xs(:),us(:,i),'.');
      ylabel('field u'), xlabel('space x')
      axis([0 1 -1 1])
  else  set(hpts,'XData',xs(:),'YData',us(:,i));
  end
  legend(['time = ' num2str(ts(i),2)],'Location','north')
  if rem(i,31)==1, ifOurCf2eps([mfilename num2str(i)]), end
  pause(0.04)
end
%surf(ts,patches.x(:),us)
%view(60,40), colormap(0.8*hsv)
%xlabel('time t'), ylabel('space x'), zlabel('u(x,t)')
%ifOurCf2eps(mfilename)
%{
\end{matlab}
\begin{figure}
\centering \caption{\label{fig:mmBurgersExample}field
$u(x,t)$ of the moving patch scheme applied to Burgers'~\pde.}
\begin{tabular}{@{}cc@{}}
\includegraphics[width=0.47\linewidth]{Figs/mmBurgersExample1}
&
\includegraphics[width=0.47\linewidth]{Figs/mmBurgersExample32}
\\
\includegraphics[width=0.47\linewidth]{Figs/mmBurgersExample63}
&
\includegraphics[width=0.47\linewidth]{Figs/mmBurgersExample94}
\end{tabular}
\end{figure}
%}