% Simulate heterogeneous wave propagation in 1D on patches as
% an example application of patches in space. Here the
% microscale is of known period so we interpolate
% next-to-edge values to get opposite edge values. AJR, 25
% Nov 2019
%!TEX root = ../Doc/eqnFreeDevMan.tex
%{
\section{\texttt{homoWaveEdgy1}: computational homogenisation of a 1D wave by simulation on small patches}
\label{sec:homoWaveEdgy1}
%\localtableofcontents

\cref{fig:homoWaveEdgyU2} shows an example simulation in
time generated by the patch scheme applied to macroscale
wave propagation through a medium with microscale
heterogeneity. The inter-patch coupling is realised by
spectral interpolation of the patch's next-to-edge values to
the patch opposite edges. This coupling preserves symmetry
in many systems.
\begin{figure}
\centering \caption{\label{fig:homoWaveEdgyU2}wave
field~\(u(x,t)\) of the gap-tooth scheme applied to the
weakly damped wave~\cref{eq:hetroWave}. The microscale
random component to the initial condition persists in the
simulation until the weak damping smooths the sub-patch
fluctuations---but the macroscale wave still propagates.}
\includegraphics[scale=0.85]{../Patch/homoWaveEdgyU2}
\end{figure}


Often, wave-like systems are written in terms of two
conjugate variables, for example, position and momentum
density, electric and magnetic fields, and water depth and
mean longitudinal velocity. Here suppose the spatial
microscale lattice is at points~\(x_i\), with constant
spacing~\(dx\). With dependent variables~\(u_i(t)\)
and~\(v_i(t)\), simulate the microscale lattice, weakly
damped, wave system
\begin{equation}
\D t{u_{i}}=v_{i}\,,\quad
\D t{v_{i}}= \frac1{dx^2}\delta[c_{i-1/2}\delta u_{i}]
+\frac{0.02}{dx^2}\delta^2 v_{i}\,,
\label{eq:hetroWave}
\end{equation}
in terms of the centred difference operator~\(\delta\). The
system has a microscale heterogeneity via the
coefficients~\(c_{i+1/2}\) which we assume to have some
given known periodicity. \cref{fig:homoWaveEdgyU2} shows one
patch simulation of this system: observe the effects of the
heterogeneity within each patch.

\begin{figure}
\centering \caption{\label{fig:homoWaveEdgyU1}wave
field~\(u(x,t)\) of the gap-tooth scheme applied to the
weakly damped wave~\cref{eq:hetroWave}. Over this shorter
meso-time we see the macroscale wave emerging from the
damped sub-patch fast waves.}
\includegraphics[scale=0.85]{../Patch/homoWaveEdgyU1}
\end{figure}





\begin{devMan}



\subsection{Script code to simulate heterogeneous wave systems}
\label{sec:sc2heterowaves}

This example script implements the following patch\slash
gap-tooth scheme (left-right arrows denote function
recursion).
\begin{enumerate}\def\itemsep{-1.5ex}
\item configPatches1, and add micro-information 
\item ode15s \into patchSmooth1 \into heteroWave
\item plot the simulation 
\item use patchSmooth1 to check the Jacobian
\end{enumerate}

First establish the microscale heterogeneity has
micro-period~\verb|mPeriod| on the lattice, and random
log-normal values, albeit normalised to have harmonic mean
one.  This normalisation then means that macroscale waves on
a domain of length~\(2\pi\) have near integer frequencies,
\(1,2,3,\ldots\). Then the heterogeneity is to be repeated
\verb|nPeriodsPatch| times within each patch. 
\begin{matlab}
%}
clear all
mPeriod = 3
cHetr = exp(1*randn(mPeriod,1));
cHetr = cHetr*mean(1./cHetr) % normalise
nPeriodsPatch=1
%{
\end{matlab}

Establish the global data struct~\verb|patches| for the
microscale heterogeneous lattice wave
system~\cref{eq:hetroWave} solved on \(2\pi\)-periodic
domain, with seven patches, here each patch of size
ratio~\(0.25\) from one side to the other, with five
micro-grid points in each patch, and spectral
interpolation~(\(0\)) to provide the edge-values of the
inter-patch coupling conditions. Setting
\verb|patches.EdgyInt| to one means the edge-values come
from interpolating the opposite next-to-edge values of the
patches (not the mid-patch values).
\begin{matlab}
%}
global patches
nPatch = 7
ratio = 0.25
nSubP = nPeriodsPatch*mPeriod+2
configPatches1(@heteroWave,[-pi pi],nan,nPatch ...
    ,0,ratio,nSubP,'EdgyInt',true);
%{
\end{matlab}

Replicate the heterogeneous coefficients across the width of
each patch.
\begin{matlab}
%}
patches.c=[repmat(cHetr,(nSubP-2)/mPeriod,1);cHetr(1)];
%{
\end{matlab}

\paragraph{Simulate}
Set the initial conditions of a simulation to be that of a
macroscopic progressive wave, via~\(\sin/\cos\), perturbed
by significant random microscale noise, via~\verb|randn|.
\begin{matlab}
%}
uv0(:,1,1,:) = -sin(patches.x)+0.3*randn(nSubP,1,1,nPatch);
uv0(:,2,1,:) = +cos(patches.x)+0.3*randn(nSubP,1,1,nPatch);
%{
\end{matlab}
Integrate for about half a wave period using standard stiff
integrators (which do not work efficiently until after the
fast waves have decayed).
\begin{matlab}
%}
if ~exist('OCTAVE_VERSION','builtin')
    [ts,us] = ode15s(@patchSmooth1, [0 3], uv0(:));
else % octave version
    [ts,us] = odeOcts(@patchSmooth1, [0 3], uv0(:));
end
%{
\end{matlab}

\paragraph{Plot space-time surface of the simulation}
We want to see the edge values of the patches, so we adjoin
a row of \verb|nan|s in between patches. For the field
values (which are rows in~\verb|us|) we need to reshape,
permute, interpolate to get edge values, pad with
\verb|nan|s, and reshape again.
\begin{matlab}
%}
xs = squeeze(patches.x);  
us = patchEdgeInt1( permute( reshape(us,length(ts) ...
     ,nSubP,2,nPatch) ,[2 3 1 4]) );
xs(end+1,:) = nan; us(end+1,:) = nan;
us = reshape(permute(us,[1 4 2 3]),length(xs(:)),2,[]);
%{
\end{matlab}

Now plot two space-time graphs. The first is every time step
over a meso-time to see the oscillation and decay of the
fast sub-patch waves. The second is subsampled surface over
the macroscale duration of the simulation to show the
propagation of the macroscale wave over the heterogeneous
lattice.
\begin{matlab}
%}
for p=1:2
  switch p
  case 1, j=find(ts<0.5);
  case 2, [~,j]=min(abs(ts-linspace(ts(1),ts(end),50)));
  end
  figure(p),clf
  mesh(ts(j),xs(:),squeeze(us(:,1,j))),  view(60,40)
  xlabel('time t'), ylabel('space x'), zlabel('u(x,t)')
  set(gcf,'PaperUnits','centimeters','PaperPosition',[0 0 14 10])
%  print('-depsc2',[mfilename 'U' num2str(p)])
end
%{
\end{matlab}


\paragraph{Compute Jacobian and its spectrum}
Form the Jacobian matrix, linear operator, by numerical
construction about a zero field.  Use~\verb|i| to store the
indices of the micro-grid points that are interior to the
patches and hence are the systems variables.
\begin{matlab}
%}
u0=repmat(0*patches.x,1,2); u0([1 end],:)=nan; u0=u0(:);
i=find(~isnan(u0));
nJ=length(i);
Jac=nan(nJ);
for j=1:nJ
   u0(i)=((1:nJ)==j);
   dudt=patchSmooth1(0,u0);
   Jac(:,j)=dudt(i);
end
Jac(abs(Jac)<1e-12)=0;
%{
\end{matlab}
\begin{table}
\caption{\label{tbl:homoWaveEdgy1}example parameters and
list of eigenvalues (every fourth one listed is sufficient
due to symmetry): \(\texttt{nPatch}=7\),
\(\texttt{ratio}=0.25\), \(\texttt{nSubP}=5\).  The spectrum
is satisfactory for weakly damped macroscale waves, and
medium-damped microscale sub-patch fast waves.}
\begin{verbatim}
cHetr =
      0.58459
       1.0026
       3.4253
eval =
   2.2701e-16 + 1.4225e-07i
    -0.013349 +    0.99941i
    -0.053324 +     1.9952i
     -0.11971 +     2.9838i
      -5.1527 +     19.554i
      -5.2679 +     19.695i
      -5.3383 +     19.779i
      -5.3619 +     36.632i
      -5.3722 +     36.632i
      -5.4026 +     36.631i
      -5.4514 +      36.63i
\end{verbatim}
\end{table}
Find the eigenvalues of the Jacobian, and list for inspection in \cref{tbl:homoWaveEdgy1}.
\begin{matlab}
%}
[evecs,evals]=eig(Jac);
eval=sort(diag(evals));
slowestEvals=eval(2:4:4*nPatch)
%{
\end{matlab}

End of the main script.



\input{../Patch/heteroWave.m}


Fin.
\end{devMan}
%}

