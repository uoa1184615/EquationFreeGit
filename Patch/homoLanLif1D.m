% Simulate heterogeneous Landau--Lifshitz PDE in 1D on
% patches as an example application of patches in space. 
% From Leitenmaier & Runborg,
% http://arxiv.org/abs/2108.09463
% AJR, Sep 2021
%!TEX root = ../Doc/eqnFreeDevMan.tex
%{
\section{\texttt{homoLanLif1D}: computational homogenisation
of a 1D heterogeneous Landau--Lifshitz by simulation on
small patches}
\label{sec:homoLanLif1D}
%\localtableofcontents

The Landau--Lifshitz equation describes the precessional
motion of magnetization~\Mv\ in a solid (see
\emph{Landau--Lifshitz--Gilbert equation} in Wikipedia). In
a medium with microscale heterogeneity~\(a(x)\), and with
phenomenological damping parameter~\(\alpha\), we explore
the dynamics of~\(\Mv(x,t)\) governed by the nonlinear
Landau--Lifshitz \pde\ \cite[(1.1)]{Leitenmaier2021}
\footnote{Recall \(a\times (b\times c) =(a\cdot c)b -(a\cdot
b)c\)}
\begin{equation*}
\Mv_t=-\Mv\times \Hv -\alpha \Mv\times (\Mv\times \Hv),
\quad \Hv:=\divv(a\grad\Mv).
\end{equation*} 
Note, for every~\(x\), \(|\Mv(x,t)|\) is constant in time
due to \(\Mv\cdot\Mv_t=0\) for every~\(x,t\).  We normally
set \(|\Mv(x,0)|=1\)\,.

\cref{fig:homoLanLif1Duvw} shows an example simulation in time
generated by the patch scheme applied to the above
Landau--Lifshitz \pde\ on the spatial domain~\([0,1]\) with
domain boundary conditions of \(1\)-periodicity.  The
inter-patch coupling is realised by interpolation of the
patch's next-to-edge values to the patch opposite edges.
Such coupling preserves symmetry in many systems (quartic
interpolation appears to be the lowest order that generally
gives good accuracy). With damping parameter
\(\alpha=0.001\) then the largest few macroscale modes decay
with rate roughly~\(0.1\), and so are negligibly damped over
a time of~\(0.1\). 
\begin{figure}
\centering \caption{\label{fig:homoLanLif1Duvw}magnetic
field~\(\Mv(x,t)=(u,v,w)\) of the gap-tooth scheme applied
to the heterogeneous Landau--Lifshitz \pde\ to show the
emergent macroscale wave-like dynamics. This simulation uses
eleven patches in space of size ratio~\(0.055\).  Compare
the time \(t=0.1\) graph with Fig.~2.1 of
\cite{Leitenmaier2021}.}
\includegraphics[scale=0.85]{homoLanLif1Duvw}
\end{figure}


Suppose the spatial microscale lattice is at points~\(x_i\),
with constant spacing~\(dx\). With dependent
variables~\(\Mv_i(t)\), simulate the microscale lattice system
\begin{equation*}
\Mv_{i\,t} = -\Mv_i\times \Hv_i 
-\alpha \Mv_i\times (\Mv_i\times \Hv_i),
\quad
\Hv_i := \frac1{dx^2}\delta[a_{i-1/2}\delta \Mv_{i}] ,
%\label{eq:hetroLanLif1D}
\end{equation*}
in terms of the centred difference operator~\(\delta\). The
system has a microscale heterogeneity via the
coefficients~\(a_{i+1/2}\) which we assume to have some
given known periodicity \cite[pp.6,27]{Leitenmaier2021}.
\cref{fig:homoLanLif1Duvw} shows a patch simulation of this
system: observe the effects of the heterogeneity within each
patch.


\paragraph{Parameters}
There are two closely related examples
\cite[pp.6,27]{Leitenmaier2021}, that we distinguish here
with parameter \verb|ex5p1|: set to either zero or one. The
Landau--Lifshitz dissipation parameter~\(\alpha\) should be
small.  If the initial conditions are smooth, then
\verb|ode15s| has no problems for \(\alpha=0.001\). 
\footnote{But, add randomness to the initial conditions and
the computation appears unstable with \texttt{ode15s} when
\(\alpha<0.2\). However, \texttt{ode23} may be stable? for
\(\alpha=0.01\) albeit expensively taking~\(10^7\)
time-steps per second (due to microscale oscillations of
frequency up to~\(10^5\)--\(10^6\)).}
\begin{matlab}
%}
global alpha ex5p1
ex5p1 = 0; % set to 1 for L&O example of p.27
alpha = 0.001 % phenomenological damping parameter 
%{
\end{matlab}
The physical microscale periodicity of the heterogeneity
is~\(\epsilon\) (\(\epsilon\)~is \emph{not} the patch scale
ratio):
\begin{matlab}
%}
epsilon = 1/200/(1+ex5p1) %pp.6,27
%{
\end{matlab}






\subsection{Script code to simulate heterogeneous diffusion systems}
\label{sec:sc2heterodiff}

This example script implements the following patch\slash
gap-tooth scheme.
\begin{enumerate}\def\itemsep{-1.5ex}
\item configPatches1 
\item ode15s \into patchSys1 \into heteroLanLif1D
\item plot the simulation 
\end{enumerate}

First establish the microscale heterogeneity has
micro-period~\verb|mPeriod| on the lattice with values of
the column vector from \cite{Leitenmaier2021} [pp.6,27]. 
Later, the heterogeneity is repeated to fill each patch.
\begin{matlab}
%}
dx = 1/2000 %1/6000 %p.27
mPeriod = round(epsilon/dx)
a = 1 + 0.5*sin(2*pi*(0.5:mPeriod)'/mPeriod); %p.6
%{
\end{matlab}

Establish the global data struct~\verb|patches| for the
microscale heterogeneous lattice diffusion
system~\cref{eq:hetroDiff} solved on \(1\)-periodic domain,
with maybe 24~patches, but 11~is enough, here each patch of
size ratio to fit one period of the heterogeneity in each
patch, and spectral inter-patch interpolation to provide the
patch edge-values. Invoking \verb|EdgyInt| means the
edge-values come from interpolating the opposite
next-to-edge values of the patches (not the mid-patch
values).  
\begin{matlab}
%}
global patches
nPatch = 11 %24 %p.6, odd is slightly cleaner
nSubP = mPeriod+2 
ratio = nPatch*epsilon 
configPatches1(@heteroLanLif1D,[0 1],nan,nPatch ...
    ,0,ratio,nSubP,'EdgyInt',true ...
    ,'hetCoeffs',a);
assert(abs(dx-diff(patches.x(2:3)))<1e-10 ...
      ,'microscale grid spacing error')
%{
\end{matlab}


\paragraph{Simulate}
Set the initial conditions of a simulation to be that of
\cite{Leitenmaier2021} [pp.6], except possibly perturbed by
random microscale noise.  Scale the initial conditions so
that \(|\Mv(x,0)|=1\)\,.
\begin{matlab}
%}
u0 = 0.5+exp(-0.1*cos(2*pi*(patches.x-0.32)));
v0 = 0.5+exp(-0.2*cos(2*pi*patches.x)) +0*randn(size(patches.x));
w0 = 0.5+exp(-0.1*cos(2*pi*(patches.x-0.75)));
M0 = [ u0 v0 w0 ]./sqrt(u0.^2+v0.^2+w0.^2); 
dM0dt = patchSys1(0,M0(:)); 
%{
\end{matlab}
Integrate using standard integrators.
\begin{matlab}
%}
tic
[ts,Ms] = ode15s(@patchSys1, [0 0.1], M0(:));
cpuTime=toc
sizeMs=size(Ms)
%{
\end{matlab}
Reshape results for processing.  For simplicity, set edge
values to \verb|nan|s. For the field values (which are rows
in~\verb|Ms|) we need to reshape, permute,  and reshape
again. 
\begin{matlab}
%}
xs = squeeze(patches.x);  
Ms = reshape(Ms,length(ts),nSubP,3,nPatch);
Ms(:,[1 end],:,:) = nan; % nan patch edges
Ms = reshape( permute(Ms,[2 4 1 3]) ,[],length(ts),3);
%{
\end{matlab}
Check on constancy of~\(|\Mv(x,t)|\) in time.  The mean and
standard deviation appears to show that, with~\verb|ode15s|,
they are constant to errors typically~\(10^{-5}\).
\begin{matlab}
%}
Mabs = sqrt( sum(Ms.^2,3) );
meanMabs = mean(Mabs(:),'omitnan')
stdevMabs = std(Mabs(:),'omitnan')
%{
\end{matlab}



\paragraph{Plot space-time surface of the simulation}
Choose whether to save some plots, or not.
\begin{matlab}
%}
global OurCf2eps
OurCf2eps = false;
%{
\end{matlab}
Subsampled surface over the macroscale duration of the
simulation to show the propagation of the macroscale
modes over the heterogeneous lattice.
\begin{matlab}
%}
figure(1),clf
if length(ts)>50
  [~,j]=min(abs(ts(:)-linspace(ts(1),ts(end),50)));
  else j=1:length(ts); end
uvw='uvw';
for p=1:3
  subplot(2,2,p)
  mesh(ts(j),xs(:),Ms(:,j,p))
  view(60,40), colormap(0.8*hsv)
  xlabel('time t'), ylabel('space x')
  zlabel([uvw(p) '(x,t)']) 
end
%{
\end{matlab}
Final time plot to compare with Fig.~2.1 of
\cite{Leitenmaier2021}.
\begin{matlab}
%}
subplot(2,2,4)
plot(xs(:),squeeze(Ms(:,end,:)),'.')
xlabel('space x'), legend(uvw(1),uvw(2),uvw(3))
title(['time = ' num2str(ts(end),4)])
ifOurCf2eps([mfilename 'uvw'])
%{
\end{matlab}



\subsection{Spectrum of the coded patch system}
It appears the spectrum has the following properties as
shown by \cref{fig:homoLanLif1DSpec}, with \(N =
\verb|nPatch|\) and \(n = \verb|nSubP| -2\)\,, and on base
of \(\Mv = \vec 1/\sqrt3\).
\begin{figure}
\centering\caption{\label{fig:homoLanLif1DSpec}spectrum of
eigenvalues of the multiscale patch scheme applied to the
Landau--Lifshitz \pde.  The macroscale eigenvalues are
clearly separated from those of the microscale sub-patch
modes.}
\includegraphics[scale=0.85]{homoLanLif1DSpec}
\end{figure}
\begin{itemize}
\item A (near) zero eigenvalue for each and every microscale
lattice point~(\(nN\)) due to \(|\Mv(x,t)|\) being constant
in time, for every~\(x\). Presumably near zero 
(roughly~\(10^{-2}\)) due to round-off error.
\item \(2N\) macroscale eigenvalues, including a pair of
(near) zero eigenvalues of macroscale conservation, and
others ranging from \(27(-\alpha\pm i)\) to \((-6.4\alpha\pm
7.4i)(N-1)^2\).
\item \(2(n-1)N\) fast eigenvalues, more negative than
about\(~-\alpha\cdot10^6\) and higher frequency than
about\(~10^6\).  Presumably depends upon~\(\epsilon\)---the
periodicity and patch size.
\end{itemize}
Form an equilibrium of~\Mv\ constant in space, then
find the indices corresponding to patch interior points.
\begin{matlab}
%}
Me = 1+0.2*rand(1,3);
Me = Me./sqrt(sum(Me.^2,2))
Me = Me +0*patches.x; 
Me([1 end],:,:,:)=nan;
i=find(~isnan(Me));
f0 = patchSys1(0,Me(:)); 
assert(abs( norm(f0(:)) )<1e-8,'not equilibrium')
%{
\end{matlab}
Form the Jacobian by numerical differentiation.
\begin{matlab}
%}
delta=1e-7;
nJac=length(i);
Jac=nan(nJac);
for j=1:nJac
  M=Me; M(i(j))=M(i(j))+delta;
  fj=patchSys1(0,M(:));
  Jac(:,j)=(fj(i)-f0(i))/delta;
end
%{
\end{matlab}
Compute eigenvalues, sort, and count some groups
according to ad hoc criteria.
\begin{matlab}
%}
eval = eig(Jac);
[~,k] = sort(abs(eval));
eval = eval(k);
nZero = sum(abs(eval)<1)
nCent = sum(abs(real(eval))<1e5*alpha)
nSlow = sum(abs(eval)<1e5)
%{
\end{matlab}
Plot the spectrum of eigenvalues on quasi-log axes.
\begin{matlab}
%}
figure(2),clf
hp = plot(real(eval),imag(eval),'.')
xlabel('Re\lambda'), ylabel('Im\lambda')
quasiLogAxes(hp,1,100);
ifOurCf2eps([mfilename 'Spec'])
%{
\end{matlab}




\input{../Patch/heteroLanLif1D.m}

Fin.
%}

